<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2010, v.4002-->
<!DOCTYPE document PUBLIC "-//Simonsoft//DTD TechDoc Base V1.1 PDS//EN"
 "pds.dtd">
<?Pub Inc?>
<document createdby="takesson" modifiedby="takesson"
modifieddate="2010-02-10 14:11" revision="57" status="In_Work"
type="manual" xml:lang="en-US">
<title> CMS Administration</title>
<frontm>
<toc/></frontm>
<body>
<section><?Pub Dtl?>
<title>System Administration</title>
<slide>
<title>CMS Administration</title>
</slide>
<slide fontsize="20pt">
<title>System Administration</title>
<itemlist>
<title>Contents</title>
<li><p>Tools</p></li>
<li><p>Admin Repository</p></li>
<li><p>Access Permissions</p></li>
<li><p>Repository Administration</p></li>
<li><p>Indexing</p></li>
</itemlist>
</slide>
<slide fontsize="18pt">
<title>Tools</title>
<p>The following software tool are required in order to perform administrative
tasks.</p>
<itemlist>
<title>SSH</title>
<p>Required in order to login remotely to the server.</p>
<li><p>Windows: Recommend Tunnelier (<link
uri="http://www.bitvise.com/tunnelier">http://www.bitvise.com/tunnelier</link
>) or Putty.</p></li>
<li><p>Included on most other operating systems.</p></li>
</itemlist>
<itemlist>
<title>Subversion Client</title>
<p>Required to manage files versioned by the CMS and contents of the
Admin repository.</p>
<li><p>Windows: TortoiseSvn 1.6.x (<link uri="http://tortoisesvn.net/"
>http://tortoisesvn.net/</link>) or the official command-line client.</p>
</li>
<li><p>Command-line client included on most other operating systems.</p>
</li>
</itemlist>
<itemlist>
<title>LDAP Browser</title>
<p>Required to manage the OpenLDAP directory (might not be used when
integrating with a corporate directory service, e.g. Active Directory).</p>
<li><p>Recommend <label type="product">Apache Directory Studio</label
> (<link uri="http://directory.apache.org/studio/">http://directory.apache.org/studio/</link
>)</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Admin Repository</title>
<itemlist>
<title>The server has a special repository called <label type="mmi"
>Admin</label> containing:</title>
<li><p>Server configuration, supporting scripts and branding.</p></li>
<li><p>Access Permission configuration.</p></li>
<li><p>Deployment configuration.</p></li>
<li><p>Optional: Development of document types and style sheets.</p>
</li>
</itemlist>
<p>The <label type="mmi">Admin</label> repository is located at the
URL: <label type="guiitem">http://server.company.se/svn/admin</label
>.</p>
<note>
<p>The path <label type="guiitem">http://server.company.se/svn/admin/cms/</label
> is checked out to the server file system at location <label
type="guiitem">/home/svnuser/cms/</label>. Beware that the automatic
updates to the file system is very sensitive to password changes,
file system permissions, local modifications etc (subject to customization
on each installation).</p>
</note>
</slide>
<slide fontsize="16pt">
<title>Access Permissions</title>
<itemlist>
<title>Access permissions are defined in a Subversion Access File.</title>
<li><p>The syntax is described in <label type="product">Version Control
with Subversion</label>: <link
uri="http://svnbook.red-bean.com/en/1.5/svn.serverconfig.pathbasedauthz.html"
>Path-Based Authorization</link></p></li>
<li><p>The file can be edited via a Web browser on this URL: <label
type="sign">http://server.company.se/svn/admin/auth/access.accs</label
>.</p></li>
<li><p>The file is located on the file system here: <label type="sign"
>/home/svnuser/cms/auth/access.accs</label>. It can be edited with
a text editor, e.g. nano.</p></li>
</itemlist>
<note>
<p>It is highly recommended to use the group definitions in the Access
file rather than assigning permissions to usernames.</p>
</note>
<admon type="2-warning">
<p>A syntax error in the Access File will revoke all permissions from
the server, i.e. a server lockdown. Never edit the Access File without
first ensuring SSH access to the server.</p>
</admon></slide>
<slide fontsize="18pt">
<title>Repository Administration</title>
<p>Subversion repositories can be added and removed individually on
the server.</p>
<itemlist>
<title>Creating a repository</title>
<li><p>Login via SSH.</p></li>
<li><p>Execute the script createrepo.sh.</p><p>~/cms/createrepo.sh
newreponame</p>
</li>
<li><p>Ensure that access permissions are correctly set up for the
repository.</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Indexing</title>
<p>All authoring data is stored in the Subversion repositories, however,
the indexing server is required for usability and search functionality. </p>
<note>
<p>Re-indexing can be performed as required without loss of data.
A large repository can take significant amounts of time to re-index.</p>
</note>
<itemlist>
<title>Re-indexing a repository</title>
<li><p>Login via SSH.</p></li>
<li><p>Change directory: </p><p>cd ~/cms/hookscripts/indexing</p>
</li>
<li><p>Execute re-indexing script:</p><p>./rebuild_index.py -p /home/svnuser/svn/thereponame</p>
</li>
</itemlist>
<admon type="4-important">
<p>This information is preliminary and future development might simplify
this process.</p>
</admon></slide>
</section>
<section>
<title>Authoring Administration</title>
<slide fontsize="20pt">
<title>Authoring Administration</title>
<itemlist>
<title>Contents</title>
<li><p>Deployment Overview</p></li>
<li><p>Deployment Process</p><?Pub Caret -1?></li>
<li><p>Bursting Rules</p></li>
<li><p>Subversion Metadata</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Deployment Overview</title>
<itemlist>
<title>The Arbortext Editor Deployment feature is typically used for:</title>
<li><p>CMS Adapter (SvnAdapter)</p></li>
<li><p>CMS Adapter configuration</p></li>
<li><p>Document Types and Style Sheets</p></li>
<li><p>Editor preferences, e.g. PE configuration.</p></li>
</itemlist>
<note>
<p>Refer to the section <label type="mmi">Deploying a centralized
configuration</label> in the <label type="product">Arbortext Help
Center</label> for details.</p>
</note>
<itemlist>
<title>Deployment Setup</title>
<li><p>All deployment data is stored in: <label type="sign">http://server.company.se/svn/admin/deploy/</label
>.</p></li>
<li><p>This location MUST be configured with anonymous read permission.
This can be verified by pointing a web browser to the URL which should
display without prompting for login.</p></li>
<li><p>The CMS is normally delivered with a standard deployment setup
in: <label type="sign">http://server.company.se/svn/admin/deploy/default/</label
></p></li>
<li><p>After setting the environment variable APTDEPLOYPATH to <label
type="sign">http://server.company.se/svn/admin/deploy/default/</label
>, the Editor should, on restart, download the deployment packages
and configurations.</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Bursting Rules</title>
<itemlist>
<title>Overview</title>
<li><p>Bursting rules are configured for each document type.</p></li>
<li><p>There is one collection of bursting rules for each repository,
located in <label type="guiitem">/arbortext/bursting/</label>.</p></li>
<li><p>There MUST always be a bursting rule file called <label
type="guiitem">atidefaults.xml</label>. This bursting rule should
not be edited except on recommendation from Simonsoft.</p></li>
<li><p>Each bursting rule file should be named after the document
type it applies to, and given the extension <label type="guiitem"
>.xml</label>.</p></li>
</itemlist>
<deflist>
<title>Top-level sections</title>
<defitem>
<defterm>
<p>script</p>
</defterm>
<defdesc>
<p>Can define an ACL script. This feature is not supported. Since
Arbortext Editor 5.4 there is a more modern concept called CMSEvents
that can trigger JavaScripts.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>boundaryspec</p>
</defterm>
<defdesc>
<p>Automatically bursting a document into multiple objects is currently
not supported. Do not add rules in this section.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>customrefspec</p>
</defterm>
<defdesc>
<p>This section is used when creating references not based on XInclude
or a graphics tag, e.g. DITA. Support is considered experimental.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>createarg</p>
</defterm>
<defdesc>
<p>See <xref linkend="dl_createarg"/>.</p>
</defdesc>
</defitem>
</deflist>
<note>
<p>The SvnAdapter supports XInclude but it does NOT support the legacy
reference mechanism <label markfortrans="yes" type="mmi">file entities</label
>.</p>
</note>
</slide>
<slide fontsize="16pt">
<title>Bursting Rules (cont.)</title>
<p><label type="mmi">Help Center</label> sections referred to below
might exist for multiple built in Adapters. Generally, the information
regarding <label type="mmi">IBM Document Manager</label> applies also
to the SvnAdapter.</p>
<deflist xml:id="dl_createarg">
<title>Object Creation</title>
<defitem>
<defterm>
<p>namecriteria</p>
</defterm>
<defdesc>
<p>Configures suggested/enforced naming of new objects. </p>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Configuring naming rules</label>.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmsobjtype</p>
</defterm>
<defdesc>
<p>Defining object types is not required/supported.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmslocation</p>
</defterm>
<defdesc>
<p>Location hooks is a legacy feature replaced by CMSEvents. Not supported.</p>
<p>Location rules (<label type="guiitem">locnrule</label>) can be
used to define default locations of object based on the root tag.</p>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Configuring object location mappings</label>.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmsversion</p>
</defterm>
<defdesc>
<p>Defining object version is not required/supported.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmsmetadata</p>
</defterm>
<defdesc>
<p>Metadata can be propagated from XML to CMS using <label type="guiitem"
>metadatarule</label>.</p>
<p>Metadata can be propagated from CMS to XML or bi-directionally
using <label type="guiitem">twowaymetadatarule</label>.</p>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Assigning repository metadata</label>.</p>
<p>Subversion metadata naming conventions and modelled information
is described in <xref linkend="slide_svnmetadata"/>.</p>
</defdesc>
</defitem>
</deflist>
</slide>
<slide fontsize="16pt" xml:id="slide_svnmetadata">
<title>Subversion Metadata</title>
<itemlist>
<title>Overview</title>
<li><p>Metadata is stored using the mechanism Subversion calls <quote
>Properties</quote>.</p></li>
<li><p>Property naming is very liberal, as long as the <quote>namespace</quote
> convention is followed.</p></li>
<li><p>The convention is to prefix the property name with a (usually)
3–letter prefix. The prefix is separated from the name with a colon,
e.g. <label type="guiitem">cms:status</label>.</p></li>
</itemlist>
<deflist>
<title>Property Namespaces</title>
<defitem>
<defterm>
<p>svn</p>
</defterm>
<defdesc>
<p><emph bold="yes">Reserved</emph> for Subversion internal use.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>cms</p>
</defterm>
<defdesc>
<p>Used for CMS-related metadata that can be modified both in XML
and CMS. </p>
<p>Defined by Simonsoft. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>xml</p>
</defterm>
<defdesc>
<p>Used for information driven from the XML. </p>
<p>Defined by Simonsoft. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>abx</p>
</defterm>
<defdesc>
<p>Used by SvnAdapter for storing technical details about the objects. </p>
<p><emph bold="yes">Reserved</emph> by Simonsoft. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>svninfo</p>
</defterm>
<defdesc>
<p>Special namespace exposed by SvnAdaper for bursting of Subversion
information (svn info) using <label type="guiitem">twowaymetadatarule</label
> with <label type="guiitem">mode = toxml</label>.</p>
<p>See <xref linkend="dl_svninfo"/> for specific information available.</p>
</defdesc>
</defitem>
</deflist>
</slide>
<slide fontsize="16pt">
<title>Subversion Metadata (cont.)</title>
<table>
<title>Subversion Info</title>
<tgroup cols="2">
<colspec colname="COLSPEC0" colwidth="1.42*"/>
<colspec colname="COLSPEC1" colwidth="3.58*"/>
<tbody>
<row>
<entry char="."><p>svninfo:@revision</p></entry>
<entry char="."><p>Revision number of path/URL, should be repository
HEAD revision. See note below. </p></entry>
</row>
<row>
<entry char="."><p>svninfo:@url</p></entry>
<entry char="."><p>URL of this item in the repository. </p></entry>
</row>
<row>
<entry char="."><p>svninfo:commit/@revision</p></entry>
<entry char="."><p>Revision number of this object (last commit). </p
></entry>
</row>
<row>
<entry char="."><p>svninfo:commit/author</p></entry>
<entry char="."><p>User name who last committed the object. </p></entry>
</row>
<row>
<entry char="."><p>svninfo:commit/date-iso</p></entry>
<entry char="."><p>Datestamp of last commit in <quote>ISO</quote>format
(<label type="guiitem">yyyy-MM-dd HH:mm</label>).</p><p>Should be
adjusted to client timezone.</p></entry>
</row>
</tbody>
</tgroup>
</table>
<note>
<p>The revision provided by svninfo:@revision might not represent
HEAD revision if editing and composing in the same Editor session.
Discrepancies in composed output can easily be avoided by performing
either of the following before composing.</p>
<itemlist>
<li><p>Close all documents and press refresh in CMS Browser.</p></li>
<li><p>Disconnect and reconnect to the repository.</p></li>
</itemlist>
</note>
</slide>
</section>
</body>
</document>
<?Pub *0000013625 0?>
