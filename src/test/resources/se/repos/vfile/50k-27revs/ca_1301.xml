<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2012, v.4002-->
<!DOCTYPE document PUBLIC "-//Simonsoft//DTD TechDoc Base V1.1 PDS//EN"
 "pds.dtd">
<?Pub Inc?>
<document createdby="takesson" modifiedby="takesson"
modifieddate="2013-02-18 11:43" revision="1300" status="In_Work"
type="manual" xml:lang="en-US">
<title> CMS Administration</title>
<frontm>
<toc/></frontm>
<body>
<section>
<title>System Administration</title>
<slide><?Pub Dtl?>
<title>CMS Administration</title>
</slide>
<slide fontsize="20pt"><?Pub Dtl?>
<title>System Administration</title>
<itemlist>
<title>Contents</title>
<li><p>Tools</p></li>
<li><p>Admin Repository</p></li>
<li><p>Authentication and Authorization</p></li>
<li><p>Authorization — Access Permissions</p></li>
<li><p>Repository Administration</p></li>
<li><p>Indexing</p></li>
<li><p>Folder Structure</p></li>
<li><p>Backup Approaches</p></li>
<li><p>Server Certificate</p></li>
<li><p>Periodic Maintenance</p></li>
</itemlist>
</slide>
<slide fontsize="18pt"><?Pub Dtl?>
<title>Tools</title>
<p>The following software tool are required in order to perform administrative
tasks.</p>
<itemlist>
<title>SSH</title>
<p>Required in order to login remotely to the server.</p>
<li><p>Windows: Recommend Tunnelier (<link
uri="http://www.bitvise.com/tunnelier">http://www.bitvise.com/tunnelier</link
>) or Putty.</p></li>
<li><p>Included on most other operating systems.</p></li>
</itemlist>
<itemlist>
<title>Subversion Client</title>
<p>Required to manage files versioned by the CMS and contents of the
Admin repository.</p>
<li><p>Windows: TortoiseSvn 1.7.x (<link uri="http://tortoisesvn.net/"
>http://tortoisesvn.net/</link>) or the official command-line client.</p>
<itemlist>
<li><p>Simonsoft CMS 2.0.1 (and later) is compatible with Subversion
1.7.</p></li>
</itemlist>
</li>
<li><p>Command-line client included on most other operating systems.</p>
</li>
</itemlist>
<itemlist>
<title>LDAP Browser</title>
<p>Required to manage the OpenLDAP directory (might not be used when
integrating with a corporate directory service, e.g. Active Directory).</p>
<li><p>Recommend <label type="product">Apache Directory Studio</label
> (<link uri="http://directory.apache.org/studio/">http://directory.apache.org/studio/</link
>)</p></li>
</itemlist>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Admin Repository</title>
<itemlist>
<title>The server has a special repository called <label type="mmi"
>Admin</label> containing:</title>
<li><p>Server configuration, supporting scripts and branding.</p></li>
<li><p>Access Permission configuration.</p></li>
<li><p>Deployment configuration.</p></li>
<li><p>Optional: Development of document types and style sheets.</p>
</li>
</itemlist>
<p>The <label type="mmi">Admin</label> repository is located at the
URL: <label type="guiitem">http://server.company.se/svn/admin</label
>.</p>
<note>
<p>The path <label type="guiitem">http://server.company.se/svn/admin/cms/</label
> is checked out to the server file system at location <label
type="guiitem">/home/cmsadmin/cms/</label>. Changes should be made
on the server and committed after testing.</p>
</note>
</slide>
<slide fontsize="16pt">
<title>Authentication and Authorization</title>
<p>There are 2 steps involved when a user attempts to access the CMS,
or any other web server with restricted access.</p>
<numlist>
<title>Authentication</title>
<p>This step validates the user id and password by querying the LDAP(s).</p>
<li><p>Apache queries the first LDAP, normally the one containing
internal users (e.g. Active Directory).</p></li>
<li><p>If the user id is found, the password is validated.</p>
<itemlist>
<li><p>If the password does not match, the authentication fails. </p>
</li>
<li><p>Otherwise, Apache moves on with Authorization.</p></li>
</itemlist>
</li>
<li><p>If the user id was <emph bold="yes">not</emph> found in the
first LDAP, Apache queries the second LDAP. If the user id is not
found, or the  password does not match, the authentication fails.</p>
</li>
</numlist>
<admon type="4-important">
<p>The same user id should <emph bold="yes">not</emph> exist in both
LDAPs.</p>
</admon>
<itemlist>
<title>Authorization</title>
<p>This step validates that the user is allowed to access, and in
some cases modify, a certain area or file on the server.</p>
<li><p>In Subversion, the Access file is consulted before the user
gains access to files.</p></li>
<li><p>Some other areas, such as WebDAV and Search, does not perform
authorization. It is sufficient that the user is authenticated.</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Authorization — Access Permissions</title>
<itemlist>
<title>Access permissions are defined in a Subversion Access File.</title>
<li><p>The syntax is described in <label type="product">Version Control
with Subversion</label>: <link
uri="http://svnbook.red-bean.com/en/1.5/svn.serverconfig.pathbasedauthz.html"
>Path-Based Authorization</link></p></li>
<!--<li><p>The file can be edited via a Web browser on this URL: <label
type="sign">http://server.company.se/svn/admin/auth/access.accs</label
>.</p></li>-->
<li><p>The file is located on the file system here: <label type="sign"
>/home/cmsadmin/cms/auth/access.accs</label>. It can be edited with
a text editor, e.g. nano, see <xref linkend="slide-editingnano"/></p>
</li>
</itemlist>
<note>
<p>It is recommended to grant read access to <quote>Collection of
Repositories</quote>, denoted by <label type="guiitem">[/]</label
> to all users. Otherwise, the navigation via a Web Browser is disrupted
and such users need to start navigation from an URL pointing to a
location where the user has read access.</p>
</note>
<note>
<p>It is highly recommended to use the group definitions in the Access
file rather than assigning permissions to usernames.</p>
</note>
<admon type="2-warning">
<p>A syntax error in the Access File will revoke all permissions from
the server, i.e. a server lockdown.<!-- Never edit the Access File without first ensuring SSH access to the server.--></p>
</admon>
</slide>
<slide fontsize="18pt" xml:id="slide-editingnano"><?Pub Dtl?>
<title>Access Permissions — Editing</title>
<itemlist>
<title>Editing Access Permissions via SSH</title>
<li><p>Login via SSH.</p></li>
<li><p>Execute: <label type="guiitem">nano -w ~/cms/auth/access.accs</label
></p></li>
<li><p>When done, exit nano using <label type="guiitem">Ctrl-X</label
>, respond <label type="guiitem">Y</label> , then <label type="guiitem"
>ENTER</label> to save changes.</p></li>
<li><p>The changes are now active on the server.</p></li>
</itemlist>
<note>
<p>Validate that Access Permissions behave as intended before committing
the changes.</p>
</note>
<itemlist>
<title>Commit changes</title>
<li><p>Commit changes to Admin repository: <label type="guiitem">svn
commit ~/cms/auth/</label></p><p>Subversion will prompt for a commit
comment using nano.</p>
</li>
</itemlist>
<itemlist>
<title>Revert changes</title>
<li><p>Revert to last committed access file: <label type="guiitem"
>svn revert ~/cms/auth/access.accs</label></p></li>
</itemlist>
</slide>
<slide fontsize="18pt">
<title>Repository Administration</title>
<p>Subversion repositories can be added and removed individually on
the server.</p>
<itemlist>
<title>Creating a repository</title>
<li><p>Login via SSH.</p></li>
<li><p>Execute the script createrepo.sh.</p><p><label type="guiitem"
>~/cms/createrepo.sh newreponame</label></p>
</li>
<li><p>Ensure that access permissions are correctly set up for the
repository.</p></li>
<li><p>Add a parameter to the HostUrlList in the deployment configuration
(siteprefs.xml).</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Indexing</title>
<p>All authoring data is stored in the Subversion repositories, however,
the indexing server is required for usability and search functionality. </p>
<note>
<p>Re-indexing can be performed as required without loss of data.
A large repository can take significant amounts of time to re-index.</p>
</note>
<itemlist>
<title>Re-indexing a repository</title>
<li><p>Login via SSH.</p></li>
<li><p>Reindex a repository:</p><p><label type="guiitem">~/cms/reindex.sh
reponame</label></p>
</li>
</itemlist>
<itemlist>
<title>XML indexing for Pretranslate</title>
<li><p>The XML re-indexing is performed separately:</p><p><label
type="guiitem">~/cms/reindex_xml.sh reponame</label></p>
</li>
</itemlist>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Folder Structure</title>
<itemlist>
<title>Requirements</title>
<li><p>There must be an <label type="guiitem">arbortext</label> folder
containing configuration and bursting rules in the <label type="guiitem"
>bursting</label> subfolder.</p></li>
<li><p>A repository can represent a single <quote>project</quote>,
or the top-level folders can each represent <quote>projects</quote
> in the repository (recommended). Separation between projects must
be at the top of the repository.</p></li>
<li><p>Each <quote>project</quote> must contain a folders for releases
and translations, typically called <label type="guiitem">release</label
> and <label type="guiitem">lang</label> respectively.</p></li>
</itemlist>
<itemlist>
<title>Recommendations</title>
<li><p>Each <quote>project</quote> should separate xml and graphics
in different folder structures. Required by future <quote>sparse checkout</quote
> feature.</p>
<itemlist>
<li><p>There can be multiple xml or graphics structures, but only
one release and one translation structure per <quote>project</quote
> folder.</p></li>
</itemlist>
</li>
</itemlist>
</slide>
<slide fontsize="14pt"><?Pub Dtl?>
<title>Backup Approaches</title>
<itemlist>
<title>System Backup</title>
<li><p>Back up whole installation which provides ability to restore
the system quickly.</p></li>
<li><p>Refer to <link uri="http://www.vmware.com">VMware</link> recommendations
and software options (additional licenses might be required).</p></li>
<li><p>Stop Apache to prevent changes during backup (requires configuration
of sudo rules):</p>
<itemlist>
<li><p>Run <label type="guiitem">sudo /etc/init.d/apache2 stop</label
> before backup</p></li>
<li><p>Run <label type="guiitem">sudo /etc/init.d/apache2 start</label
> after backup</p></li>
</itemlist>
</li>
</itemlist>
<itemlist>
<title>Subversion Database Backup</title>
<li><p>Back up the Subversion repositories, i.e. the actual databases.</p>
</li>
<li><p>Restore procedure involves redeploying the Virtual Appliance
and loading the database dumps/hotcopies.</p></li>
<li><p>There are two options, each with certain advantages, see <link
uri="http://svnbook.red-bean.com/en/1.6/svn.reposadmin.maint.html#svn.reposadmin.maint.backup"
>http://svnbook.red-bean.com/en/1.6/svn.reposadmin.maint.html#svn.reposadmin.maint.backup</link
></p>
<numlist>
<li><p>Dump — Can be full or incremental, slow restore.</p></li>
<li><p>Hotcopy — Always full backup, very fast to restore.</p></li>
</numlist>
</li>
<li><p>Creating Subversion database dumps/hotcopies is performed from
a shell script which can be scheduled using cron.</p></li>
<li><p>Dumps/hotcopies are copied to a mounted disk which in turn
is backed up by whatever backup services are available.</p></li>
</itemlist>
</slide>
<slide fontsize="14pt"><?Pub Dtl?>
<title>Backup Approaches</title>
<itemlist>
<title>Replication</title>
<li><p>Backs up the Subversion repositories by periodic replication.</p>
</li>
<li><p>Restore procedure is the same as restoring a hotcopy (ensure
UUID is identical).</p></li>
<li><p>Requires an additional Subversion server, preferably on a physically
separate location.</p></li>
<li><p>Can be triggered either from master server or replica and communicates
only via http/https.</p>
<itemlist>
<li><p>A separate Apache location can be enabled in the configuration
which allows a backup user account to replicate without path based
access control.</p></li>
</itemlist>
</li>
<li><p>See documentation on <label type="guiitem">svnsync</label>: <link
uri="http://svnbook.red-bean.com/en/1.6/svn.reposadmin.maint.html#svn.reposadmin.maint.replication"
>http://svnbook.red-bean.com/en/1.6/svn.reposadmin.maint.html#svn.reposadmin.maint.replication</link
></p></li>
</itemlist>
<note>
<p>Ensure that svnsync logs are monitored to ensure that the sync
process completes correctly.</p>
</note>
</slide>
<slide fontsize="16pt">
<title>Server Certificate</title>
<p>Configuring the server with SSL (https) is recommended in order
to protect against simple password attacks. The server certificate
must be provided by the IT department and updated before it expires.</p>
<itemlist>
<title>Updating Server Certificate</title>
<li><p>Ensure that the X509 certificate, intermediate certificate
(if needed) and the key file are placed in <label type="guiitem">~/certs</label
>.</p>
<itemlist>
<li><p>Either copy them with scp or create the files with nano and
paste the content.</p></li>
</itemlist>
</li>
<li><p>Decrypt the key if required: <label type="guiitem">openssl
rsa -in ssl.key -out ssl.key.decrypted</label></p></li>
<li><p>Copy the files to Apache SSL directories:</p>
<itemlist>
<li><p><label type="guiitem">sudo cp ssl.crt /etc/apache2/ssl.crt/server.crt</label
></p></li>
<li><p><label type="guiitem">sudo cp ssl.key.decrypted /etc/apache2/ssl.key/server.key</label
></p></li>
<li><p><label type="guiitem">sudo cp sub.class2.server.ca.pem /etc/apache2/ssl.crt/sub.class2.server.ca.pem</label
> (example)</p></li>
</itemlist>
</li>
<li><p>Remove unencrypted server key from <label type="guiitem">~/certs</label
>.</p></li>
<li><p>Configure the intermediate certificate name in Apache config
(SSLCertificateChainFile).</p>
<itemlist>
<li><p>In <label type="guiitem">cms.global</label> (CMS 2.1 and later)</p>
</li>
</itemlist>
</li>
<li><p>Reload Apache: <label type="guiitem">sudo /etc/init.d/apache2
reload</label></p></li>
</itemlist>
<p></p>
<p>Contact Simonsoft for details on switching between http and https
configurations.</p>
</slide>
<slide fontsize="16pt">
<title>Periodic Maintenance</title>
<itemlist>
<title>The following should be verified on a regular schedule:</title>
<li><p>Backups are valid and complete.</p></li>
<li><p>VMware Tools are running.</p></li>
<li><p>Disk usage: <label type="guiitem">~/cms/diskinfo.sh</label
></p>
<itemlist>
<li><p>Disks should typically not go beyond 70%. A rapidly filling
disk is an indication of a malfunction or misuse of the system.</p></li>
</itemlist>
</li>
<li><p>Memory usage: top</p>
<itemlist>
<li><p>CMS 2.x should only fill 2 GB RAM under special circumstances
(e.g. extensive import of graphics). Discuss with Simonsoft if observing
sustained high RAM utilization.</p></li>
</itemlist>
</li>
<li><p>If using SSL: Validity of Server Certificate with a web browser.
Renew if current certificate is approaching the expiry date.</p></li>
</itemlist>
<itemlist>
<title>System Updates</title>
<li><p>Important if the server is accessible from the Internet or
otherwise exposed.</p></li>
<li><p>Requires a Suse Linux Enterprise Server (SLES) subscription.</p>
</li>
<li><p>Verify system backup.</p></li>
<li><p>Execute: <label type="guiitem">sudo zypper up</label></p></li>
<li><p>A reboot might be required if the kernel is updated or recommended
if other running services are updated.</p></li>
</itemlist>
</slide>
</section>
<section>
<title>Authoring Administration</title>
<slide fontsize="20pt"><?Pub Dtl?>
<title>Authoring Administration</title>
<itemlist>
<title>Contents</title>
<li><p>Deployment</p></li>
<li><p>Creating Application Packages (Zip)</p></li>
<li><p>Adapter Configuration</p></li>
<li><p>Translation Configuration</p></li>
<li><p>Bursting Rules</p></li>
<li><p>Subversion Metadata</p></li>
<li><p>Document Identification</p></li>
<li><p>CMS Namespace</p></li>
<li><p>Hiding Attributes in Editor</p></li>
<li><p>Adapter ACL Functions</p></li>
</itemlist>
</slide>
<slide fontsize="18pt"><?Pub Dtl?>
<title>Deployment Overview</title>
<itemlist>
<title>The Arbortext Editor Deployment feature is typically used for:</title>
<li><p>CMS Adapter (SvnAdapter)</p></li>
<li><p>CMS Adapter configuration</p></li>
<li><p>Document Types and Style Sheets</p></li>
<li><p>Editor preferences, e.g. PE configuration.</p></li>
</itemlist>
<note>
<p>Refer to the section <label type="mmi">Deploying a centralized
configuration</label> in the <label type="product">Arbortext Help
Center</label> for details.</p>
</note>
</slide>
<slide fontsize="14pt">
<title>Deployment Setup</title>
<itemlist>
<title>Typical Setup</title>
<li><p>The deployment data is version controlled in: <label
type="guiitem">https://server.company.se/svn/admin/deploy/</label
>.</p></li>
<li><p>The CMS is normally delivered with a standard deployment setup
in: <?Pub _newline?><label type="guiitem">http://server.company.se/svn/admin/deploy/default/</label
></p></li>
<li><p>Deploy paths are created using the <quote>deployurl</quote
> service. There should be a link from the readme (repos.html) in
the version controlled deploy area. The service is normally available
at the URL <label type="guiitem">https://server.company.se/repos-plugins/arbortext-deployurl/</label
></p></li>
<li><p>When refreshing the deploy paths, the list of deploy paths
is displayed, containing items like (example) <?Pub _newline?><label
type="guiitem">http://server.company.se/deploy-XrbYd9PFqu/default/</label
></p></li>
<li><p>The listed addresses require no login and are thus valid for
the environment variable APTDEPLOYPATH.</p><p>To try a deploy path
in a web browser, append <label type="guiitem">/site/siteprefs.xml</label
> to the URL</p>
</li>
<li><p>The editor will download the resources from the deploy on next
restart.</p></li>
<li><p>On the client machines, the configuration will typically be
unzipped in:</p>
<itemlist>
<li><p>Windows XP: <label type="guiitem">C:\Documents and Settings\USERNAME\Local
Settings\Application Data\PTC\Arbortext\Editor\.aptcache\zc</label
></p></li>
<li><p>Windows 7: <label type="guiitem">C:\Users\USERNAME\AppData\Local\PTC\Arbortext\Editor\.aptcache\zc</label
></p></li>
</itemlist>
</li>
</itemlist>
<note>
<p>It is NOT recommended to manipulate files in the <label
type="guiitem">...\.aptcache\zc</label> directory. The only exception
being cleaning the directory in case of issues, e.g. when switching
between deployment locations.</p>
</note>
</slide>
<slide>
<title>Deployment Process</title>
<graphic align="center"
fileref="x-svn:///svn/documentation^/graphics/cms/subversion/Cms_Deployment.eps"
scale="75%"/></slide>
<slide fontsize="14pt">
<title>Creating Application Packages (Zip)</title>
<note>
<p>Managing Application Packages requires a deep understanding of
the Arbortext Application structure. Refer to the section <label
type="mmi">Custom Application</label> in <label type="mmi">Customizer’s
Guide</label> in the <label type="product">Arbortext Help Center</label
> for details.</p>
</note>
<itemlist>
<title>Document Type / Stylesheet Development</title>
<li><p>It is highly useful to perform versioning in Subversion during
Stylesheet development.</p></li>
<li><p> Example scenario:</p>
<itemlist>
<li><p>Version the application package under: <?Pub _newline?><label
type="guiitem">http://server.company.se/svn/admin/dev/doctypes/...</label
></p></li>
<li><p>Checkout/create a working copy in the local Editor installation
(using TortoiseSvn).</p></li>
<li><p>Commit changes from this working copy.</p></li>
</itemlist>
</li>
</itemlist>
<itemlist>
<title>Deploying Application Package</title>
<li><p>Using a Web Browser, navigate to the Details page of the application
versioned in <?Pub _newline?><label type="guiitem">http://server.company.se/svn/admin/dev/doctypes/...</label
></p><p>This directory MUST be named according to Application naming
guidelines.<?Pub _newline?>E.g. <label type="guiitem">se.simonsoft.techdoc</label
>.</p>
</li>
<li><p>Use the <quote>Download</quote> feature in the Web UI to download
a zip file of the Application package.</p></li>
<li><p>Navigate to <label type="guiitem">http://server.company.se/svn/admin/deploy/application</label
> and perform <quote>Upload Changes</quote>. Select the just downloaded
zip file and write a commit comment describing the update.</p></li>
<li><p>Arbortext Editor will download the Application Package on the
next restart.</p></li>
</itemlist>
</slide>
<slide fontsize="16pt">
<title>Deploying to Publishing Engine (if applicable)</title>
<itemlist>
<title>Deployment to PE Server is performed manually:</title>
<li><p>Log in to PE Server using Remote Desktop.</p></li>
<li><p>Navigate to the PE installation directory. </p><p>E.g. <label
type="guiitem">C:\Program Files\PTC\Arbortext PE\application</label
></p>
</li>
<li><p>Execute the script <label type="guiitem">pedeploy.bat</label
>. On modern Windows servers, it is often required to use <label
type="mmi">Run as administrator</label>.</p></li>
<li><p>The script will deploy the application and pause before performing
the clean up. Ensure that the expansion of the package was successful
before continuing. Use <label type="guiitem">Ctrl-C</label> to abort
the script.</p></li>
<li><p>Perform a <label type="mmi">Reload Subprocesses</label> from
the Publishing Engine web interface to finalize the deployment.</p></li>
<li><p>Certain updates might require restarting the <label type="mmi"
>Apache Tomcat</label> service.</p></li>
</itemlist>
<note>
<p>The procedure described above only applies if Simonsoft installed
the PE and prepared the server for deployment.</p>
</note>
</slide>
<slide fontsize="16pt">
<title>Adapter Configuration</title>
<itemlist>
<title>Configuration locations in order of precedence:</title>
<li><p>In-repository properties</p></li>
<li><p>Editor <label type="product">set_user_property</label> (stored
in wcf)</p>
<itemlist>
<li><p>Example: <?Pub _newline?><label type="guiitem">set_user_property("se.simonsoft.adapters.svnadapter.LogLevel",
"DEBUG")</label></p></li><?Pub Caret 82?>
</itemlist>
</li>
<li><p>Deployment config (siteprefs.xml)</p></li>
<li><p>Adapter config file in zip package (not recommended)</p></li>
</itemlist>
<itemlist>
<title>In-repository configuration</title>
<li><p>Stored as subversion properties on the <label type="guiitem"
>arbortext</label> folder.</p></li>
<li><p>Properties are named with namespace <label type="guiitem">abxconfig:</label
> prepended to the <quote>short</quote> parameter name as specified
in the next slide, <xref linkend="adapter-param"/>.</p></li>
<li><p>TortoiseSvn (or the command-line client) is recommended for
adding/editing these properties.</p></li>
</itemlist>
</slide>
<slide fontsize="16pt" xml:id="adapter-param">
<title>Adapter Configuration Parameters</title>
<table>
<tgroup cols="5">
<?PubTbl tgroup dispwid="727.00px"?>
<colspec colname="col1" colwidth="1.46*"/>
<colspec colname="COLSPEC0" colwidth="1.15*"/>
<colspec colname="col2" colwidth="1.04*"/>
<colspec colname="col3" colwidth="0.75*"/>
<colspec colname="COLSPEC1" colwidth="0.52*"/>
<thead>
<row>
<entry valign="top">
<p>Parameter</p></entry>
<entry valign="top">
<p>Decription</p></entry>
<entry valign="top">
<p>Values</p></entry>
<entry valign="top">
<p>Recommended location</p></entry>
<entry valign="top">
<p>In-repo </p></entry>
</row>
</thead>
<tbody>
<row>
<entry>
<p>HostUrlList</p></entry>
<entry>
<p>List of repositories displayed in connect dialog.</p></entry>
<entry>
<p>Multi-value, e.g.:</p>
<p>demo1|http:// cms.pdsvision.net/ svn/demo1</p></entry>
<entry>
<p>Deploy</p></entry>
<entry>
<p>N</p></entry>
</row>
<row>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-left-width="0.20pt"
border-right-width="0.20pt"?>
<p>EnablePasswordStore</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Encrypted (WinCrypt) storage of password, shared with TortoiseSVN.</p>
</entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>“<emph bold="yes">True</emph>”/”False”</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Deploy</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>N</p></entry>
</row>
<row>
<entry>
<p>ReleasePath</p></entry>
<entry>
<p>Location of Release files in repository.</p></entry>
<entry>
<p>“/release” or “/*/release”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>LogLevel</p></entry>
<entry>
<p>The amount of logging produced by the SvnAdapter.</p></entry>
<entry>
<p>WARN, INFO, DEBUG, ALL</p></entry>
<entry>
<p>Deploy / WCF</p></entry>
<entry>
<p>N</p></entry>
</row>
<row>
<entry>
<p>PathLengthLimit</p></entry>
<entry>
<p>The maximum path length (as string) in the repository. See changes.txt.</p>
</entry>
<entry>
<p>Integer, default is 150.</p>
<p>Typically not changed.</p></entry>
<entry>
<p>Deploy</p></entry>
<entry>
<p>Not tested.</p></entry>
</row>
<row>
<entry>
<p>EnableUsedIn</p></entry>
<entry>
<p>Where Used/Used In view in CMS Browser. Also required for Translation
view.</p></entry>
<entry>
<p>“<emph bold="yes">True</emph>”/”False”</p></entry>
<entry>
<p>Deploy</p></entry>
<entry></entry>
</row>
<row>
<entry>
<p>EnableSearch</p></entry>
<entry>
<p>Search feature in CMS Browser.</p></entry>
<entry>
<p>“<emph bold="yes">True</emph>”/”False”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>EnablePreviewGraphics</p></entry>
<entry>
<p>Enable View button for graphics and folders in CMS Browser.</p>
</entry>
<entry>
<p>“<emph bold="yes">True</emph>”/”False”</p></entry>
<entry>
<p>Deploy</p></entry>
<entry></entry>
</row>
<row>
<entry>
<p>ExportDirectory</p></entry>
<entry>
<p>Location/path on client workstations for exporting documents.</p>
<p>Must exist on ALL workstations performing export.</p></entry>
<entry>
<p>Use forward slash instead of backslash.</p>
<p><emph bold="yes">C:/SvnExport</emph></p></entry>
<entry>
<p>Deploy</p></entry>
<entry></entry>
</row>
<row>
<entry>
<p>EnableCommitComplCheck</p></entry>
<entry>
<p>Best effort attempt to perform a completeness check before allowing
a check in. </p></entry>
<entry>
<p>“True”/”<emph bold="yes">False</emph>”</p></entry>
<entry>
<p>Deploy / In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>EnableLockParentsWarn</p></entry>
<entry>
<p>Best effort attempt to inform the user if a child object being
checked out is used in >1 parent.</p></entry>
<entry>
<p>“True”/”<emph bold="yes">False</emph>”</p></entry>
<entry>
<p>Deploy / In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>EnableTSVN</p></entry>
<entry>
<p>TortoiseSvn menu items on object menu. Assumes that TortoiseSvn
is installed and in PATH.</p></entry>
<entry>
<p>“True”/”False”</p>
<p><emph bold="yes">Automatic detection</emph>, see changes.txt</p>
</entry>
<entry>
<p>WCF</p></entry>
<entry></entry>
</row>
<row>
<entry>
<p>EnableFileMapping</p></entry>
<entry>
<p>Graphics lookup when document is saved/checked in to CMS. See changes.txt.</p>
</entry>
<entry>
<p>“True”/”<emph bold="yes">False</emph>”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>CustomDateFormat</p></entry>
<entry>
<p>Java SimpleDateFormat pattern for metadata bursting.</p></entry>
<entry>
<p><emph bold="yes">"yyyy-MM-dd HH:mm"</emph></p></entry>
<entry>
<p>Deploy</p></entry>
<entry>
<p>Y</p></entry>
</row>
</tbody>
</tgroup>
</table>
</slide>
<slide fontsize="16pt" xml:id="translation-param">
<title>Translation Configuration Parameters</title>
<table>
<tgroup cols="5">
<?PubTbl tgroup dispwid="727.00px"?>
<colspec colname="col1" colwidth="1.46*"/>
<colspec colname="COLSPEC0" colwidth="1.15*"/>
<colspec colname="col2" colwidth="1.03*"/>
<colspec colname="col3" colwidth="0.75*"/>
<colspec colname="COLSPEC1" colwidth="0.53*"/>
<thead>
<row>
<entry valign="top">
<p>Parameter</p></entry>
<entry valign="top">
<p>Decription</p></entry>
<entry valign="top">
<p>Values</p></entry>
<entry valign="top">
<p>Recommended location</p></entry>
<entry valign="top">
<p>In-repo support</p></entry>
</row>
</thead>
<tbody>
<row>
<entry>
<p>EnableTranslation</p></entry>
<entry>
<p>Translation features in CMS.</p>
<p>Requires license.</p></entry>
<entry>
<p>“True”/”<emph bold="yes">False</emph>”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>TranslationPath</p></entry>
<entry>
<p>Location of Translation files in repository.</p></entry>
<entry>
<p>“/lang” or “/*/lang”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>TranslationLocales</p></entry>
<entry>
<p>Locales available in Translation dialogs.</p></entry>
<entry>
<p>E.g.: “sv | en | en_GB”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>TranslationLangAttr</p></entry>
<entry>
<p>Name for locale attribute in schema.</p></entry>
<entry>
<p><emph bold="yes">"xml:lang"</emph></p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>TranslationLangAttrNsUri</p></entry>
<entry>
<p>Namespace for locale attribute in schema.</p>
<p>Not required for xml namespace.</p></entry>
<entry>
<p><emph bold="yes">Empty string</emph></p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>TranslationImportState</p></entry>
<entry>
<p>The status set on Translations after Import.</p></entry>
<entry>
<p>Valid value for status attribute.</p>
<p><emph bold="yes">Released</emph></p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
<row>
<entry>
<p>EnableTranslationComplCheck</p></entry>
<entry>
<p>Perform a completeness check when Preparing/Importing translations. </p>
<p>Disable with certain Schemas or Profiling configurations. </p>
</entry>
<entry>
<p>“<emph bold="yes">True</emph>”/”False”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
</tbody>
</tgroup>
</table>
</slide>
<slide fontsize="16pt">
<title>Pretranslation Configuration Parameters</title>
<p>The Pretranslation (TMS) module requires only a couple of configuration
parameters in CMS 2.1.</p>
<table>
<tgroup cols="5">
<?PubTbl tgroup dispwid="727.00px"?>
<colspec colname="col1" colwidth="1.46*"/>
<colspec colname="COLSPEC0" colwidth="1.15*"/>
<colspec colname="col2" colwidth="1.03*"/>
<colspec colname="col3" colwidth="0.75*"/>
<colspec colname="COLSPEC1" colwidth="0.53*"/>
<thead>
<row>
<entry valign="top">
<p>Parameter</p></entry>
<entry valign="top">
<p>Decription</p></entry>
<entry valign="top">
<p>Values</p></entry>
<entry valign="top">
<p>Recommended location</p></entry>
<entry valign="top">
<p>In-repo support</p></entry>
</row>
</thead>
<tbody>
<row>
<entry>
<p>EnableReleaseIdDepthLimit</p></entry>
<entry>
<p>Limit the depth of Release ID attributes (RIDs) to the paragraph
level (inclusive). Should be enabled when using third party TMS solutions
that calculates checksum on paragraph content including attributes.</p>
<p>The tags considered paragraphs are those allowed to contain text
in the Schema/DTD.</p></entry>
<entry>
<p>“True”/”<emph bold="yes">False</emph>”</p></entry>
<entry>
<p>In-repo</p></entry>
<entry>
<p>Y</p></entry>
</row>
</tbody>
</tgroup>
</table>
<table>
<tgroup cols="5">
<?PubTbl tgroup dispwid="727.00px"?>
<colspec colname="col1" colwidth="1.46*"/>
<colspec colname="COLSPEC0" colwidth="1.15*"/>
<colspec colname="col2" colwidth="1.03*"/>
<colspec colname="col3" colwidth="0.75*"/>
<colspec colname="COLSPEC1" colwidth="0.53*"/>
<thead>
<row>
<entry valign="top">
<p>Parameter</p></entry>
<entry valign="top">
<p>Decription</p></entry>
<entry valign="top">
<p>Values</p></entry>
<entry valign="top">
<p>Recommended location</p></entry>
<entry valign="top">
<p>In-repo support</p></entry>
</row>
</thead>
<tbody>
<row>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-left-width="0.20pt"
border-right-width="0.20pt"?>
<p>ReuseValidationStopTags</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>When pretranslate performs reuse of a translated fragment, it validates
the RIDs of elements above and including these tags.</p>
<p>Should typically be set to the same tags used by Depth Limit. See
slide <xref linkend="slide_aclcommands" type="number_text"/></p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Default:</p>
<p><label type="guiitem">as-is|day|email|emph|endnote|footnote|ixterm|label|link|month|name|p|phone|quote|revdescription|revnumber|signature|sub|subtitle|sup|term|title|year|ph|xi:fallback</label
></p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>In-repo</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Y</p></entry>
</row>
</tbody>
</tgroup>
</table>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Bursting Rules</title>
<itemlist>
<title>Overview</title>
<li><p>Bursting rules are configured for each document type.</p></li>
<li><p>There is one collection of bursting rules for each repository,
located in <?Pub _newline?><label type="guiitem">/arbortext/bursting/</label
>.</p></li>
<li><p>Since Simonsoft CMS 2.0, it is no longer required to have a
bursting rule file called <label type="guiitem">atidefaults.xml</label
>. </p>
<itemlist>
<li><p>This bursting rule should not be edited except on recommendation
from Simonsoft.</p></li>
</itemlist>
</li>
<li><p>Each bursting rule file should be named as the document type
it applies to, and given the extension <label type="guiitem">.xml</label
> or <label type="guiitem">.bcf</label>.</p></li>
</itemlist>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Bursting Rules (cont.)</title>
<deflist>
<title>Top-level sections</title>
<defitem>
<defterm>
<p>script</p>
</defterm>
<defdesc>
<p>Can define an ACL script. This feature is not supported. </p>
<p>Since Arbortext Editor 5.4 there is a more modern concept called
CMSEvents that can trigger JavaScripts.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>boundaryspec</p>
</defterm>
<defdesc>
<p>Automatically bursting a document into multiple objects is currently
not supported. Do not add rules in this section.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>customrefspec</p>
</defterm>
<defdesc>
<p>This section is used when creating references not based on XInclude
or a graphics tag, e.g. DITA. Support is considered experimental.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>createarg</p>
</defterm>
<defdesc>
<p>See <xref linkend="dl_createarg"/>.</p>
</defdesc>
</defitem>
</deflist>
<note>
<p>The SvnAdapter supports XInclude but it does NOT support the legacy
reference mechanism <label markfortrans="yes" type="mmi">file entities</label
>.</p>
</note>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Bursting Rules (cont.)</title>
<p><label type="mmi">Help Center</label> sections referred to below
might exist for multiple built in Adapters. Generally, the information
regarding <label type="mmi">IBM Document Manager</label> applies also
to the SvnAdapter.</p>
<deflist xml:id="dl_createarg">
<title>Object Creation</title>
<defitem>
<defterm>
<p>namecriteria</p>
</defterm>
<defdesc>
<p>Configures suggested/enforced naming of new objects. </p>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Configuring naming rules</label>.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmsobjtype</p>
</defterm>
<defdesc>
<p>Defining object types is not required/supported.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmslocation</p>
</defterm>
<defdesc>
<p>Location hooks is a legacy feature replaced by CMSEvents. Not supported.</p>
<p>Location rules (<label type="guiitem">locnrule</label>) can be
used to define default locations of object based on the root tag.
Objects can not be created in repository root (since CMS 2.1).</p>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Configuring object location mappings</label>.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmsversion</p>
</defterm>
<defdesc>
<p>Defining object version is not required/supported.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>dmsmetadata</p>
</defterm>
<defdesc>
<p>Metadata can be propagated from XML to CMS using <label
type="guiitem">metadatarule</label>.</p>
<p>Metadata can be propagated from CMS to XML or bi-directionally
using <label type="guiitem">twowaymetadatarule</label>.</p>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Assigning repository metadata</label>.</p>
<p>Subversion metadata naming conventions and modelled information
is described in <xref linkend="slide_svnmetadata"/>.</p>
</defdesc>
</defitem>
</deflist>
</slide>
<slide fontsize="16pt" xml:id="slide_namingrules"><?Pub Dtl?>
<title>Naming Rules</title>
<p>See the <label type="mmi">Help Center</label> section <label
type="mmi">Configuring naming rules</label> for a general description
of naming rules.</p>
<itemlist>
<title>Naming Conflicts</title>
<p>The CMS integration is designed to enable automated operations
with a minimal intervention from the user. When a naming conflict
arises, an attempt is made to generate a unique name in the same folder.</p>
<li><p>When the proposed name (manual or bursting rule) ends with
"000" before extension, </p><p>  the next number between 000 and 999
is selected.</p>
<itemlist>
<li><p>After creating the object numbered 999, the bursting rule must
be updated to use another name or folder.</p></li>
</itemlist>
</li>
<li><p>Otherwise, "-001" to “-999” is appended to the base name.</p>
</li>
</itemlist>
<note>
<p>It is not suitable to rely on either of these naming schemes when
multiple authors create objects in the same folders. A race condition
can cause naming conflicts (some users might not be able to check
in).</p>
</note>
</slide>
<slide fontsize="16pt" xml:id="slide_svnmetadata">
<title>Subversion Metadata</title>
<itemlist>
<title>Overview</title>
<li><p>Metadata is stored using the mechanism Subversion calls <quote
>Properties</quote>.</p></li>
<li><p>Property naming is very liberal, as long as the <quote>namespace</quote
> convention is followed.</p></li>
<li><p>The convention is to prefix the property name with a (usually)
3–letter prefix. The prefix is separated from the name with a colon,
e.g. <label type="guiitem">cms:status</label>.</p></li>
</itemlist>
<deflist>
<title>Property Namespaces</title>
<defitem>
<defterm>
<p>svn</p>
</defterm>
<defdesc>
<p><emph bold="yes">Reserved</emph> for Subversion internal use.</p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>cms</p>
</defterm>
<defdesc>
<p>Used for CMS-related metadata that can be modified both in XML
and CMS. </p>
<p>Defined by Simonsoft. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>xml</p>
</defterm>
<defdesc>
<p>Used for information driven from the XML. </p>
<p>Defined by Simonsoft, may be used in implementations. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>abx</p>
</defterm>
<defdesc>
<p>Used by SvnAdapter for storing technical details about the objects. </p>
<p><emph bold="yes">Reserved</emph> by Simonsoft. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>svninfo</p>
</defterm>
<defdesc>
<p>Special namespace exposed by SvnAdaper for bursting of Subversion
information (svn info) using <label type="guiitem">twowaymetadatarule</label
> with <label type="guiitem">mode = toxml</label>.</p>
<p>See <xref linkend="tbl_svninfo"/> for specific information available.</p>
<p><emph bold="yes">Reserved</emph> by Simonsoft. </p>
</defdesc>
</defitem>
<defitem>
<defterm>
<p>svnconfig</p>
</defterm>
<defdesc>
<p>Special namespace used to store configuration in the repository.</p>
<p><emph bold="yes">Reserved</emph> by Simonsoft. </p>
</defdesc>
</defitem>
</deflist>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Subversion Metadata (cont.)</title>
<table xml:id="tbl_svninfo">
<title>Subversion Info</title>
<tgroup cols="2">
<colspec colname="COLSPEC0" colwidth="1.42*"/>
<colspec colname="COLSPEC1" colwidth="3.58*"/>
<tbody>
<row>
<entry char=".">
<p>svninfo:@url</p></entry>
<entry char=".">
<p>URL of this item in the repository. </p></entry>
</row>
<row>
<entry char=".">
<p>svninfo:@revision</p></entry>
<entry char=".">
<p><quote>Path Revision</quote> number of URL/path, typically repository
HEAD revision or baseline revision when historical. See note below. </p>
</entry>
</row>
<row>
<entry char=".">
<p>svninfo:commit/@revision</p></entry>
<entry char=".">
<p><quote>Commit Revision</quote> number of this object (last commit). </p>
</entry>
</row>
<row>
<entry char=".">
<p>svninfo:commit/author</p></entry>
<entry char=".">
<p>User name who last committed the object. </p></entry>
</row>
<row>
<entry char=".">
<p>svninfo:commit/date-iso</p>
<p>svninfo:commit/date-custom</p></entry>
<entry char=".">
<p>Datestamp of last commit in <quote>ISO</quote>format (<label
type="guiitem">yyyy-MM-dd HH:mm</label>) or configurable with CustomDateFormat.</p>
<p>Adjusted to client timezone.</p></entry>
</row>
<row>
<entry char=".">
<p>svninfo:commit/date-iso-utc</p>
<p>svninfo:commit/date-custom-utc</p></entry>
<entry char=".">
<p>Datestamp of last commit in <quote>ISO</quote>format (<label
type="guiitem">yyyy-MM-dd HH:mm</label>) or configurable with CustomDateFormat.</p>
<p>UTC timezone.</p></entry>
</row>
</tbody>
</tgroup>
</table>
<note>
<p>The revision provided by svninfo:@revision might not represent
HEAD revision if editing and composing in the same Editor session.
Discrepancies in composed output can easily be avoided by performing
either of the following before composing.</p>
<itemlist>
<li><p>Close all documents and press refresh in CMS Browser.</p></li>
<li><p>Disconnect and reconnect to the repository.</p></li>
</itemlist>
</note>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Subversion Metadata (cont.)</title>
<p>There are some generic information that most adapters respond to.
The Subversion Adapter only responds to a minimum of this information
because we consider it “legacy” and the svninfo:... information provides
better options in most cases.</p>
<table xml:id="tbl_io_attr">
<title>Generic Info</title>
<tgroup cols="2">
<colspec colname="COLSPEC0" colwidth="1.42*"/>
<colspec colname="COLSPEC1" colwidth="3.58*"/>
<tbody>
<row>
<entry char=".">
<p>IO_ATTR_NAME</p></entry>
<entry char=".">
<p>The object name, including extension.</p></entry>
</row>
<row>
<entry char=".">
<p>IO_ATTR_PATHED_NAME</p></entry>
<entry char=".">
<p>The object path within the repository, excluding the repository
name.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Subversion Metadata (cont.)</title>
<p>There are some properties related to the Release and Translation
processes supported by the CMS. A couple of them are useful to include
in the published document so they can be retrieved using <label
type="guiitem">twowaymetadatarule</label> with <label type="guiitem"
>mode = toxml</label>.</p>
<table xml:id="tbl_release_attr">
<title>Release and Translation Properties</title>
<tgroup cols="2">
<colspec colname="COLSPEC0" colwidth="1.42*"/>
<colspec colname="COLSPEC1" colwidth="3.58*"/>
<tbody>
<row>
<entry char=".">
<p>abx:ReleaseLabel</p></entry>
<entry char=".">
<p>The label of the Release, i.e. the folder name in the release folder.
Identifies the release, preferably together with the revision, e.g.
“AB–10234”</p></entry>
</row>
<row>
<entry char=".">
<p>abx:TranslationLocale</p></entry>
<entry char=".">
<p>The locale of the translation. </p></entry>
</row>
</tbody>
</tgroup>
</table>
</slide>
<slide>
<title>Document Identification</title>
<p>This table summarizes strategies for identifying release and revision
of published documents.</p>
<table>
<tgroup cols="4">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="COLSPEC0"/>
<thead>
<row>
<entry valign="top">
<?PubTbl cell border-bottom-width="0.20pt" border-left-width="0.20pt"
border-right-width="0.20pt" border-top-width="0.20pt"?>
<p>Information</p></entry>
<entry valign="top">
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"
border-top-width="0.20pt"?>
<p>Author</p></entry>
<entry valign="top">
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"
border-top-width="0.20pt"?>
<p>Release</p></entry>
<entry valign="top">
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"
border-top-width="0.20pt"?>
<p>Translation</p></entry>
</row>
</thead>
<tbody>
<row>
<entry>
<p>Release Label (RL)</p></entry>
<entry>
<p>N/A</p></entry>
<entry>
<?PubTbl cell border-right-width="0.20pt"?>
<p>Applicable</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Applicable, since 2.0.3</p></entry>
</row>
<row>
<entry>
<p>Translation Locale (TL)</p></entry>
<entry>
<p>N/A</p></entry>
<entry>
<?PubTbl cell border-right-width="0.20pt"?>
<p>N/A</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Applicable</p></entry>
</row>
<row>
<entry>
<p>Commit Revision</p></entry>
<entry>
<p>Applicable, provides no info on dependencies.</p></entry>
<entry>
<?PubTbl cell border-right-width="0.20pt"?>
<p>Applicable, XML (flat) defined when combined with RL.</p>
<p>Graphics requires publication date.</p>
<p>Revision number is stable, i.e. changes only when modifying the
release.</p></entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Same as Release, when combined with both RL and TL.</p></entry>
</row>
<row>
<entry>
<p>Path Revision</p>
<p>(HEAD/Baseline)</p></entry>
<entry>
<p>Applicable, fully defined.</p></entry>
<entry>
<?PubTbl cell border-right-width="0.20pt"?>
<p>Applicable, fully defined  combined with RL.</p>
<p>Revision number is HEAD unless publishing a historical version.</p>
</entry>
<entry>
<?PubTbl cell border-bottom-width="0.20pt" border-right-width="0.20pt"?>
<p>Same as Release, when combined with both RL and TL.</p></entry>
</row>
</tbody>
</tgroup>
</table>
<!--Future: Aggregate Revision (Total/XML). Would be both stable and fully defined.-->
<p>For a fully defined identification, one can publish both revisions,
e.g. <quote>AB-10234–21234–sv-SE</quote>.</p>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>CMS Namespace in XML</title>
<p>The CMS defines the XML namespace <label type="guiitem">http://www.simonsoft.se/namespace/cms</label
> which must use the prefix <label type="guiitem">cms</label>. The
namespace is primarily used for attributes required by the Release
and Translation processes.</p>
<table>
<title>CMS Namespace Attributes</title>
<tgroup cols="2">
<colspec colname="COLSPEC0" colwidth="1.42*"/>
<colspec colname="COLSPEC1" colwidth="3.58*"/>
<tbody>
<row>
<entry>
<p>cms:logicalid</p></entry>
<entry>
<p>Set when exporting documents from the CMS in order to track its
origin.</p></entry>
</row>
<row>
<entry char=".">
<p>cms:translation-project</p></entry>
<entry char=".">
<p>The identifier of a translation project which is unique for each
execution of Prepare Translation. This attribute is important for
the process of importing translations after being translated (typically
by an agency).</p>
<p>Recommendation: Hide from the Edit view and Document Map. Place
in the CMS attribute category.</p></entry>
</row>
<row>
<entry char=".">
<p>cms:rlogicalid</p></entry>
<entry char=".">
<p>During the Prepare Release operation documents are flattened into
a single object. The tag of each flattened XInclude is given this
attribute in order to track its origin.</p>
<p>Recommendation: Hide from the Edit view and Document Map.</p></entry>
</row>
<row>
<entry>
<p>cms:rid</p></entry>
<entry>
<p>During the first Prepare Translation operation for a release, it
is traversed giving each element a unique identifier.</p>
<p>Recommendation: Hide from the Edit view and Document Map.</p></entry>
</row>
</tbody>
</tgroup>
</table>
</slide>
<slide fontsize="16pt"><?Pub Dtl?>
<title>Hiding Attributes in Editor</title>
<p>Individual attributes can be hidden in Arbortext Editor with the
below edits of the DCF file for the document type. It is highly recommended
to hide some of the CMS Namespace attributes related to releases.</p>
<numlist>
<li><p>Open the "doctype".dcf file in Arbortext Editor.</p></li>
<li><p>Locate the AttributeOptions element in the DCF Editor. If the
file doesn't include a AttributeOptions element, add one.</p></li>
<li><p>Place your cursor next to the AttributeOptions element, and
insert a new AttributeOption element.</p></li>
<li><p>Type the name of the attribute that you want to hide in the
attribute field.</p></li>
<li><p>Choose yes in the screenHidden field if you want to hide the
selected attribute in the Edit and Document Map panes.</p></li>
<li><p>Click OK.</p></li>
<li><p>Repeat the previous steps to configure additional attributes
that you want to suppress.</p></li>
<li><p>Choose File ▶ Save to save the changes you have made to the
.dcf file.</p></li>
</numlist>
</slide>
<slide fontsize="18pt" xml:id="slide_aclcommands">
<title>Adapter ACL functions</title>
<p>The following functions can be executed on the Editor command line
in ACL mode (Command). F5 switches between different script languages.</p>
<itemlist>
<li><p>When developing Bursting rules it is useful to request the
Editor to reload them without restarting the Editor:</p>
<itemlist>
<li><p><label type="guiitem">svnadapter::clearBurstConfig()</label
></p></li>
</itemlist>
</li>
<li><p>When troubleshooting or reporting issues with the CMS Adapter
the adapter log should be attached. The log for the current session
can be opened:</p>
<itemlist>
<li><p><label type="guiitem">svnadapter::log()</label></p></li>
</itemlist>
</li>
<li><p>The tags considered paragraph tags for the current document
can be displayed:</p>
<itemlist>
<li><p><label type="guiitem">eval svnschema::getTagsText(current_doc())</label
></p></li>
</itemlist>
</li>
</itemlist>
</slide>
</section>
</body>
</document>
